name: CI

on: [push, pull_request]

jobs:
  # Job to run JavaScript tests
  js-tests:
    runs-on: ubuntu-latest
    if: always()  # Ensures that the job is considered but controlled by the following steps
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history including all branches

    - name: Fetch all branches
      run: git fetch --all

    - name: Check if 'main' branch exists
      id: check_main
      run: |
        if git show-ref --verify --quiet refs/remotes/origin/main; then
          echo "main_exists=true" >> $GITHUB_ENV
        else
          echo "main_exists=false" >> $GITHUB_ENV
        fi

    - name: Check for JavaScript file changes
      id: check_js_changes
      run: |
        if [ "$GITHUB_ENV" = "true" ]; then
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
        else
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
        fi
        echo "Changed files: $CHANGED_FILES"
        
        if echo "$CHANGED_FILES" | grep -q ".*\.js"; then
          echo "js_changed=true" >> $GITHUB_ENV
        else
          echo "js_changed=false" >> $GITHUB_ENV
        fi

    - name: Run JavaScript tests
      if: env.js_changed == 'true'
      run: |
        echo "Running JavaScript tests..."
        npm install
        npm test

  # Job to run Elixir tests
  elixir-tests:
    runs-on: ubuntu-latest
    if: always()  # Ensures that the job is considered but controlled by the following steps
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history including all branches

    - name: Fetch all branches
      run: git fetch --all

    - name: Check if 'main' branch exists
      id: check_main
      run: |
        if git show-ref --verify --quiet refs/remotes/origin/main; then
          echo "main_exists=true" >> $GITHUB_ENV
        else
          echo "main_exists=false" >> $GITHUB_ENV
        fi

    - name: Check for Elixir file changes
      id: check_elixir_changes
      run: |
        if [ "$GITHUB_ENV" = "true" ]; then
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
        else
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
        fi
        echo "Changed files: $CHANGED_FILES"
        
        if echo "$CHANGED_FILES" | grep -q ".*\.ex\|.*\.exs"; then
          echo "elixir_changed=true" >> $GITHUB_ENV
        else
          echo "elixir_changed=false" >> $GITHUB_ENV
        fi

    - name: Run Elixir tests
      if: env.elixir_changed == 'true'
      run: |
        echo "Running Elixir tests..."
        mix deps.get
        mix test

